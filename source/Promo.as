/*		Promo*/import mx.utils.Delegate;import caurina.transitions.*;import caurina.transitions.properties.*;class Promo extends MovieClip{	private var promo:String;	private var headline:String;	private var bodyCopy:String;	private var assetType:String;	private var assetName:String;	private var promopic_mc:MovieClip;		private var headline_tf:TextField;	private var bodycopy_tf:TextField;	private var OVER:TextFormat;	private var OFF:TextFormat;		private var __mcImageLoader:MovieClipLoader;	private var loadImageListener:Object = new Object();		private function Promo(){//		TextShortcuts.init();		this._alpha=0;				trace("PROMO CONSTRUTCOR "+headline+" : "+bodyCopy+" :: "+ assetName+ " :: "+assetType);		//headline_tf.text = headline;		//bodycopy_tf.text = bodyCopy;		OFF = new TextFormat(); 		OVER = new TextFormat(); 		OFF.color = 0x7A192F;		OVER.color = 0x000000;		this.headline_tf.setTextFormat(OFF);		// if assetType = swf then load it in THIS maybe.. ?				loadImageListener = new Object();		__mcImageLoader = new MovieClipLoader();		setUpImage();				if (assetType =="swf"){			__mcImageLoader.loadClip(_global.assetPath + assetName, this);			this.headline_tf._alpha =0;			this._x -=4;			this._y-=2;					}else{			__mcImageLoader.loadClip(_global.assetPath + assetName, promopic_mc);			}	}			private function setUpImage():Void {		loadImageListener.onLoadStart = function(target_mc:MovieClip, httpStatus:Number):Void {}				loadImageListener.onLoadComplete = function(target_mc:MovieClip, httpStatus:Number):Void {			//trace("IMAGE COMPLETE "+target_mc);			} 		loadImageListener.onLoadInit = Delegate.create(this, imageLoaded);				loadImageListener.onLoadProgress = function(target:MovieClip, bytesLoaded:Number, bytesTotal:Number):Void {				//trace("progress "+bytesLoaded);		}		this.__mcImageLoader.addListener(loadImageListener);	}		private function imageLoaded():Void {		//trace("IMAGE LOADED " + this);				Tweener.addTween(this, {_alpha:100, delay:3, time:1.1, transition:"easeOut"});	}				private function onRollOver(){		//this.headline_tf.setTextFormat(OVER);		gotoAndPlay("over");		//trace(this._name+" over");	}	private function onRollOut(){		//this.headline_tf.setTextFormat(OFF);		gotoAndPlay("off");				//trace(this._name+" and out");	}	private function onPress(){		//trace(this._name+" press");	}	private function onRelease(){		//trace(this._name+" release");	}	}